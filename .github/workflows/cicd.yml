name: build-and-deploy

# 워크플로 트리거: main 브랜치 푸시 시 자동 실행, 수동 실행도 가능
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# 동시에 두 번 배포되지 않도록 보호
# 동일 ref 기준으로 실행 그룹을 묶고, 새 실행이 시작되면 이전 실행을 취소
concurrency:
  group: webapp-${{ github.ref }}
  cancel-in-progress: true

env:
  # Docker Hub 이미지 경로
  # `<username>/hello-app` 형태로 사용 (username은 시크릿에서 주입)
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/photocard-maker

jobs:
  build-and-deploy-dockerhub:
    # GitHub 호스티드 러너 (Ubuntu) 환경에서 실행
    runs-on: ubuntu-latest

    steps:
      # 저장소 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 불변 이미지 태그용 타임스탬프 생성 (추적성/롤백 용이)
      - name: Set immutable tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      # Buildx 설정 (멀티 플랫폼 빌드/캐시 기능 활용)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker Hub 로그인 (이미지 푸시 권한)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # linux/amd64로 빌드해 App Service와 아키텍처 호환 보장
      - name: Build and push (immutable tag)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          # 태그 전략: TIMESTAMP(불변) + latest(편의)
          tags: |
            index.docker.io/${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.TAG }}
            index.docker.io/${{ env.DOCKER_IMAGE }}:latest

      # Publish Profile로 인증하므로 azure/login 불필요
      # images 입력에 방금 푸시한 불변 태그를 지정해 안정적으로 배포
      # - name: Deploy to Azure Web App (container)
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
      #     images: index.docker.io/${{ env.DOCKER_IMAGE }}:${{ steps.vars.outputs.TAG }}

      # 보안상 세션 정리: Docker Hub 로그아웃
      - name: Post logout Docker Hub
        if: always()
        run: docker logout
